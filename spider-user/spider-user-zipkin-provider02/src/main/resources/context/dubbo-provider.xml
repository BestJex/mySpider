<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <dubbo:application name="my-provider"  />
    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880"  />


    <!--&lt;!&ndash; service implementation, as same as regular local bean &ndash;&gt;-->
    <bean id="test02ServiceProvider" class="com.spider.user.zipkin.provider02.service.Test02ServiceProvider"/>

    <!-- declare the service interface to be exported -->
    <dubbo:service interface="com.spider.user.service.api.ISpiderTest02Service" ref="test02ServiceProvider" filter="tracing"/>

    <!--<context:service ref="userInfoService" interface="com.spider.user.service.api.ISpiderUserInfoServiceervice"/>-->

    <!-- zipkin configuration -->
    <bean id="sender" class="zipkin2.reporter.beans.OkHttpSenderFactoryBean">
        <property name="endpoint" value="http://localhost:9411/api/v2/spans"/>
    </bean>

    <!--<bean id="kafkaSender" class="zipkin2.reporter.beans.KafkaSenderFactoryBean">-->
        <!--<property name="topic" value="zipkinTopic"/>-->
        <!--<property name="bootstrapServers" value="121.40.187.38:9062"/>-->
        <!--<property name="encoding" value="JSON"/>-->
    <!--</bean>-->

    <bean id="tracing" class="brave.spring.beans.TracingFactoryBean">
        <property name="localServiceName" value="greeting-service"/>
        <property name="spanReporter">
            <bean class="zipkin2.reporter.beans.AsyncReporterFactoryBean">
                <property name="sender" ref="sender"/>
                <!-- wait up to half a second for any in-flight spans on close -->
                <property name="closeTimeout" value="500"/>
            </bean>
        </property>
        <property name="currentTraceContext">
            <bean class="brave.spring.beans.CurrentTraceContextFactoryBean">
                <property name="scopeDecorators">
                    <bean class="brave.context.slf4j.MDCScopeDecorator" factory-method="create"/>
                </property>
            </bean>
        </property>
    </bean>
</beans>